//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Java.Interop;

namespace Java.Text {

	// Metadata.xml XPath class reference: path="/api/package[@name='java.text']/class[@name='DateFormat']"
	[global::Java.Interop.JniTypeSignature ("java/text/DateFormat", GenerateJavaPeer=false, InvokerType=typeof (DateFormatInvoker))]
	public abstract partial class DateFormat : global::Java.Text.Format {
		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='AM_PM_FIELD']"
		public const int AmPmField = (int) 14;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='DATE_FIELD']"
		public const int DateField = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='DAY_OF_WEEK_FIELD']"
		public const int DayOfWeekField = (int) 9;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='DAY_OF_WEEK_IN_MONTH_FIELD']"
		public const int DayOfWeekInMonthField = (int) 11;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='DAY_OF_YEAR_FIELD']"
		public const int DayOfYearField = (int) 10;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='DEFAULT']"
		public const int Default = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='ERA_FIELD']"
		public const int EraField = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='FULL']"
		public const int Full = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='HOUR0_FIELD']"
		public const int Hour0Field = (int) 16;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='HOUR1_FIELD']"
		public const int Hour1Field = (int) 15;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='HOUR_OF_DAY0_FIELD']"
		public const int HourOfDay0Field = (int) 5;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='HOUR_OF_DAY1_FIELD']"
		public const int HourOfDay1Field = (int) 4;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='LONG']"
		public const int Long = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='MEDIUM']"
		public const int Medium = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='MILLISECOND_FIELD']"
		public const int MillisecondField = (int) 8;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='MINUTE_FIELD']"
		public const int MinuteField = (int) 6;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='MONTH_FIELD']"
		public const int MonthField = (int) 2;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='SECOND_FIELD']"
		public const int SecondField = (int) 7;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='SHORT']"
		public const int Short = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='TIMEZONE_FIELD']"
		public const int TimezoneField = (int) 17;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='WEEK_OF_MONTH_FIELD']"
		public const int WeekOfMonthField = (int) 13;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='WEEK_OF_YEAR_FIELD']"
		public const int WeekOfYearField = (int) 12;

		// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/field[@name='YEAR_FIELD']"
		public const int YearField = (int) 1;

		// Metadata.xml XPath class reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']"
		[global::Java.Interop.JniTypeSignature ("java/text/DateFormat$Field", GenerateJavaPeer=false)]
		public new partial class Field : global::Java.Text.Format.Field {

			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='AM_PM']"
			public static global::Java.Text.DateFormat.Field? AmPm {
				get {
					const string __id = "AM_PM.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='DAY_OF_MONTH']"
			public static global::Java.Text.DateFormat.Field? DayOfMonth {
				get {
					const string __id = "DAY_OF_MONTH.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='DAY_OF_WEEK']"
			public static global::Java.Text.DateFormat.Field? DayOfWeek {
				get {
					const string __id = "DAY_OF_WEEK.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='DAY_OF_WEEK_IN_MONTH']"
			public static global::Java.Text.DateFormat.Field? DayOfWeekInMonth {
				get {
					const string __id = "DAY_OF_WEEK_IN_MONTH.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='DAY_OF_YEAR']"
			public static global::Java.Text.DateFormat.Field? DayOfYear {
				get {
					const string __id = "DAY_OF_YEAR.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='ERA']"
			public static global::Java.Text.DateFormat.Field? Era {
				get {
					const string __id = "ERA.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='HOUR0']"
			public static global::Java.Text.DateFormat.Field? Hour0 {
				get {
					const string __id = "HOUR0.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='HOUR1']"
			public static global::Java.Text.DateFormat.Field? Hour1 {
				get {
					const string __id = "HOUR1.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='HOUR_OF_DAY0']"
			public static global::Java.Text.DateFormat.Field? HourOfDay0 {
				get {
					const string __id = "HOUR_OF_DAY0.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='HOUR_OF_DAY1']"
			public static global::Java.Text.DateFormat.Field? HourOfDay1 {
				get {
					const string __id = "HOUR_OF_DAY1.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='MILLISECOND']"
			public static global::Java.Text.DateFormat.Field? Millisecond {
				get {
					const string __id = "MILLISECOND.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='MINUTE']"
			public static global::Java.Text.DateFormat.Field? Minute {
				get {
					const string __id = "MINUTE.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='MONTH']"
			public static global::Java.Text.DateFormat.Field? Month {
				get {
					const string __id = "MONTH.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='SECOND']"
			public static global::Java.Text.DateFormat.Field? Second {
				get {
					const string __id = "SECOND.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='TIME_ZONE']"
			public static global::Java.Text.DateFormat.Field? TimeZone {
				get {
					const string __id = "TIME_ZONE.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='WEEK_OF_MONTH']"
			public static global::Java.Text.DateFormat.Field? WeekOfMonth {
				get {
					const string __id = "WEEK_OF_MONTH.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='WEEK_OF_YEAR']"
			public static global::Java.Text.DateFormat.Field? WeekOfYear {
				get {
					const string __id = "WEEK_OF_YEAR.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}


			// Metadata.xml XPath field reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/field[@name='YEAR']"
			public static global::Java.Text.DateFormat.Field? Year {
				get {
					const string __id = "YEAR.Ljava/text/DateFormat$Field;";

					var __v = _members.StaticFields.GetObjectValue (__id);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field? >(ref __v, JniObjectReferenceOptions.Copy);
				}
			}

			static readonly JniPeerMembers _members = new JniPeerMembers ("java/text/DateFormat$Field", typeof (Field));

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			protected Field (ref JniObjectReference reference, JniObjectReferenceOptions options) : base (ref reference, options)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/constructor[@name='DateFormat.Field' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='int']]"
			[global::Java.Interop.JniConstructorSignature ("(Ljava/lang/String;I)V")]
			protected unsafe Field (string? name, int calendarField) : base (ref *InvalidJniObjectReference, JniObjectReferenceOptions.None)
			{
				const string __id = "(Ljava/lang/String;I)V";

				if (PeerReference.IsValid)
					return;

				var native_name = global::Java.Interop.JniEnvironment.Strings.NewString (name);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_name);
					__args [1] = new JniArgumentValue (calendarField);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					Construct (ref __r, JniObjectReferenceOptions.CopyAndDispose);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::Java.Interop.JniObjectReference.Dispose (ref native_name);
				}
			}

			public virtual unsafe int CalendarField {
				// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/method[@name='getCalendarField' and count(parameter)=0]"
				get {
					const string __id = "getCalendarField.()I";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
						return __rm;
					} finally {
					}
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat.Field']/method[@name='ofCalendarField' and count(parameter)=1 and parameter[1][@type='int']]"
			[global::Java.Interop.JniMethodSignature ("ofCalendarField", "(I)Ljava/text/DateFormat$Field;")]
			public static unsafe global::Java.Text.DateFormat.Field? OfCalendarField (int calendarField)
			{
				const string __id = "ofCalendarField.(I)Ljava/text/DateFormat$Field;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (calendarField);
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat.Field> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
				} finally {
				}
			}

		}

		static readonly JniPeerMembers _members = new JniPeerMembers ("java/text/DateFormat", typeof (DateFormat));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		protected DateFormat (ref JniObjectReference reference, JniObjectReferenceOptions options) : base (ref reference, options)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/constructor[@name='DateFormat' and count(parameter)=0]"
		[global::Java.Interop.JniConstructorSignature ("()V")]
		protected unsafe DateFormat () : base (ref *InvalidJniObjectReference, JniObjectReferenceOptions.None)
		{
			const string __id = "()V";

			if (PeerReference.IsValid)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				Construct (ref __r, JniObjectReferenceOptions.CopyAndDispose);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public virtual unsafe global::Java.Util.Calendar? Calendar {
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getCalendar' and count(parameter)=0]"
			get {
				const string __id = "getCalendar.()Ljava/util/Calendar;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Util.Calendar> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='setCalendar' and count(parameter)=1 and parameter[1][@type='java.util.Calendar']]"
			set {
				const string __id = "setCalendar.(Ljava/util/Calendar;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public static unsafe global::Java.Text.DateFormat? DateInstance {
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getDateInstance' and count(parameter)=0]"
			get {
				const string __id = "getDateInstance.()Ljava/text/DateFormat;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
				} finally {
				}
			}
		}

		public static unsafe global::Java.Text.DateFormat? DateTimeInstance {
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getDateTimeInstance' and count(parameter)=0]"
			get {
				const string __id = "getDateTimeInstance.()Ljava/text/DateFormat;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
				} finally {
				}
			}
		}

		public static unsafe global::Java.Text.DateFormat? Instance {
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getInstance' and count(parameter)=0]"
			get {
				const string __id = "getInstance.()Ljava/text/DateFormat;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
				} finally {
				}
			}
		}

		public virtual unsafe bool Lenient {
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='isLenient' and count(parameter)=0]"
			get {
				const string __id = "isLenient.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='setLenient' and count(parameter)=1 and parameter[1][@type='boolean']]"
			set {
				const string __id = "setLenient.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value ? (sbyte)1 : (sbyte)0);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		public virtual unsafe global::Java.Text.NumberFormat? NumberFormat {
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getNumberFormat' and count(parameter)=0]"
			get {
				const string __id = "getNumberFormat.()Ljava/text/NumberFormat;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.NumberFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='setNumberFormat' and count(parameter)=1 and parameter[1][@type='java.text.NumberFormat']]"
			set {
				const string __id = "setNumberFormat.(Ljava/text/NumberFormat;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		public static unsafe global::Java.Text.DateFormat? TimeInstance {
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getTimeInstance' and count(parameter)=0]"
			get {
				const string __id = "getTimeInstance.()Ljava/text/DateFormat;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
				} finally {
				}
			}
		}

		public virtual unsafe global::Java.Util.TimeZone? TimeZone {
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getTimeZone' and count(parameter)=0]"
			get {
				const string __id = "getTimeZone.()Ljava/util/TimeZone;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Util.TimeZone> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='setTimeZone' and count(parameter)=1 and parameter[1][@type='java.util.TimeZone']]"
			set {
				const string __id = "setTimeZone.(Ljava/util/TimeZone;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='format' and count(parameter)=3 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='java.lang.StringBuffer'] and parameter[3][@type='java.text.FieldPosition']]"
		[global::Java.Interop.JniMethodSignature ("format", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;")]
		public unsafe global::Java.Lang.StringBuffer? Format (global::Java.Lang.Object? obj, global::Java.Lang.StringBuffer? toAppendTo, global::Java.Text.FieldPosition? fieldPosition)
		{
			const string __id = "format.(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (obj);
				__args [1] = new JniArgumentValue (toAppendTo);
				__args [2] = new JniArgumentValue (fieldPosition);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Lang.StringBuffer> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
				global::System.GC.KeepAlive (obj);
				global::System.GC.KeepAlive (toAppendTo);
				global::System.GC.KeepAlive (fieldPosition);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='format' and count(parameter)=1 and parameter[1][@type='java.util.Date']]"
		[global::Java.Interop.JniMethodSignature ("format", "(Ljava/util/Date;)Ljava/lang/String;")]
		public unsafe string? Format (global::Java.Util.Date? date)
		{
			const string __id = "format.(Ljava/util/Date;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (date);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Java.Interop.JniEnvironment.Strings.ToString (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
				global::System.GC.KeepAlive (date);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='format' and count(parameter)=3 and parameter[1][@type='java.util.Date'] and parameter[2][@type='java.lang.StringBuffer'] and parameter[3][@type='java.text.FieldPosition']]"
		public abstract global::Java.Lang.StringBuffer? Format (global::Java.Util.Date? p0, global::Java.Lang.StringBuffer? p1, global::Java.Text.FieldPosition? p2);

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getAvailableLocales' and count(parameter)=0]"
		[global::Java.Interop.JniMethodSignature ("getAvailableLocales", "()[Ljava/util/Locale;")]
		public static unsafe global::Java.Interop.JavaObjectArray<global::Java.Util.Locale>? GetAvailableLocales ()
		{
			const string __id = "getAvailableLocales.()[Ljava/util/Locale;";
			try {
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Interop.JavaObjectArray<Java.Util.Locale>>(ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getDateInstance' and count(parameter)=1 and parameter[1][@type='int']]"
		[global::Java.Interop.JniMethodSignature ("getDateInstance", "(I)Ljava/text/DateFormat;")]
		public static unsafe global::Java.Text.DateFormat? GetDateInstance (int style)
		{
			const string __id = "getDateInstance.(I)Ljava/text/DateFormat;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (style);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getDateInstance' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.util.Locale']]"
		[global::Java.Interop.JniMethodSignature ("getDateInstance", "(ILjava/util/Locale;)Ljava/text/DateFormat;")]
		public static unsafe global::Java.Text.DateFormat? GetDateInstance (int style, global::Java.Util.Locale? aLocale)
		{
			const string __id = "getDateInstance.(ILjava/util/Locale;)Ljava/text/DateFormat;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (style);
				__args [1] = new JniArgumentValue (aLocale);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
				global::System.GC.KeepAlive (aLocale);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getDateTimeInstance' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[global::Java.Interop.JniMethodSignature ("getDateTimeInstance", "(II)Ljava/text/DateFormat;")]
		public static unsafe global::Java.Text.DateFormat? GetDateTimeInstance (int dateStyle, int timeStyle)
		{
			const string __id = "getDateTimeInstance.(II)Ljava/text/DateFormat;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (dateStyle);
				__args [1] = new JniArgumentValue (timeStyle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getDateTimeInstance' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='java.util.Locale']]"
		[global::Java.Interop.JniMethodSignature ("getDateTimeInstance", "(IILjava/util/Locale;)Ljava/text/DateFormat;")]
		public static unsafe global::Java.Text.DateFormat? GetDateTimeInstance (int dateStyle, int timeStyle, global::Java.Util.Locale? aLocale)
		{
			const string __id = "getDateTimeInstance.(IILjava/util/Locale;)Ljava/text/DateFormat;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (dateStyle);
				__args [1] = new JniArgumentValue (timeStyle);
				__args [2] = new JniArgumentValue (aLocale);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
				global::System.GC.KeepAlive (aLocale);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getTimeInstance' and count(parameter)=1 and parameter[1][@type='int']]"
		[global::Java.Interop.JniMethodSignature ("getTimeInstance", "(I)Ljava/text/DateFormat;")]
		public static unsafe global::Java.Text.DateFormat? GetTimeInstance (int style)
		{
			const string __id = "getTimeInstance.(I)Ljava/text/DateFormat;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (style);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='getTimeInstance' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='java.util.Locale']]"
		[global::Java.Interop.JniMethodSignature ("getTimeInstance", "(ILjava/util/Locale;)Ljava/text/DateFormat;")]
		public static unsafe global::Java.Text.DateFormat? GetTimeInstance (int style, global::Java.Util.Locale? aLocale)
		{
			const string __id = "getTimeInstance.(ILjava/util/Locale;)Ljava/text/DateFormat;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (style);
				__args [1] = new JniArgumentValue (aLocale);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Text.DateFormat> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
				global::System.GC.KeepAlive (aLocale);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='parse' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[global::Java.Interop.JniMethodSignature ("parse", "(Ljava/lang/String;)Ljava/util/Date;")]
		public virtual unsafe global::Java.Util.Date? Parse (string? source)
		{
			const string __id = "parse.(Ljava/lang/String;)Ljava/util/Date;";
			var native_source = global::Java.Interop.JniEnvironment.Strings.NewString (source);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_source);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Util.Date> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
				global::Java.Interop.JniObjectReference.Dispose (ref native_source);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='parse' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.text.ParsePosition']]"
		public abstract global::Java.Util.Date? Parse (string? p0, global::Java.Text.ParsePosition? p1);

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='parseObject' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.text.ParsePosition']]"
		[global::Java.Interop.JniMethodSignature ("parseObject", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;")]
		public override unsafe global::Java.Lang.Object? ParseObject (string? source, global::Java.Text.ParsePosition? pos)
		{
			const string __id = "parseObject.(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;";
			var native_source = global::Java.Interop.JniEnvironment.Strings.NewString (source);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_source);
				__args [1] = new JniArgumentValue (pos);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Lang.Object> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
				global::Java.Interop.JniObjectReference.Dispose (ref native_source);
				global::System.GC.KeepAlive (pos);
			}
		}

	}

	[global::Java.Interop.JniTypeSignature ("java/text/DateFormat", GenerateJavaPeer=false)]
	internal partial class DateFormatInvoker : DateFormat {
		public DateFormatInvoker (ref JniObjectReference reference, JniObjectReferenceOptions options) : base (ref reference, options)
		{
		}

		static readonly JniPeerMembers _members = new JniPeerMembers ("java/text/DateFormat", typeof (DateFormatInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='format' and count(parameter)=3 and parameter[1][@type='java.util.Date'] and parameter[2][@type='java.lang.StringBuffer'] and parameter[3][@type='java.text.FieldPosition']]"
		[global::Java.Interop.JniMethodSignature ("format", "(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;")]
		public override unsafe global::Java.Lang.StringBuffer? Format (global::Java.Util.Date? p0, global::Java.Lang.StringBuffer? p1, global::Java.Text.FieldPosition? p2)
		{
			const string __id = "format.(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Lang.StringBuffer> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
				global::System.GC.KeepAlive (p2);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='DateFormat']/method[@name='parse' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.text.ParsePosition']]"
		[global::Java.Interop.JniMethodSignature ("parse", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;")]
		public override unsafe global::Java.Util.Date? Parse (string? p0, global::Java.Text.ParsePosition? p1)
		{
			const string __id = "parse.(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;";
			var native_p0 = global::Java.Interop.JniEnvironment.Strings.NewString (p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Util.Date> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
				global::Java.Interop.JniObjectReference.Dispose (ref native_p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='java.text']/class[@name='Format']/method[@name='format' and count(parameter)=3 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='java.lang.StringBuffer'] and parameter[3][@type='java.text.FieldPosition']]"
		[global::Java.Interop.JniMethodSignature ("format", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;")]
		public override unsafe global::Java.Lang.StringBuffer? InvokeFormat (global::Java.Lang.Object? p0, global::Java.Lang.StringBuffer? p1, global::Java.Text.FieldPosition? p2)
		{
			const string __id = "format.(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, __args);
				return global::Java.Interop.JniEnvironment.Runtime.ValueManager.GetValue<global::Java.Lang.StringBuffer> (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
				global::System.GC.KeepAlive (p2);
			}
		}

	}
}
